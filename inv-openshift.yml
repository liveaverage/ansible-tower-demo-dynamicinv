---

#
# Best practice is to create an sa with cluster-reader permissions:
#
# oc login -u system:admin
# oc project default
# oc create sa sa-view
# oc adm policy add-cluster-role-to-user view system:serviceaccount:default:sa-view
# oc adm policy add-cluster-role-to-user cluster-reader system:serviceaccount:default:sa-view
# oc get secret | grep sa-view-dockercfg | tail -1 | awk '{system("oc get secret " $1 " -o json")}' | \
#    python -c 'import sys, json; print json.load(sys.stdin)["metadata"]["annotations"]["openshift.io/token-secret.value"]' > /tmp/.token
#

- hosts: localhost
  vars:
    oc_api: "{{ c_api | default('https://172.16.2.10:8443') }}"
    oc_token: "{{ c_token | default('') }}"
    oc_json_query: "items[*].status.addresses[?type==`InternalIP`].address"
  tasks:
    - name: "Query Openshift API for Nodes"
      uri:
        url: "{{ oc_api }}/api/v1/nodes" 
        method: GET
        headers:
          Authorization: Bearer {{ oc_token }}
          Accept: application/json
        validate_certs: False
      register: ocp_hosts

    - debug: var=ocp_hosts
    - debug: var=item
      with_items: "{{ ocp_hosts.json | json_query(oc_json_query) }}"

    - name: "Set workflow fact with returned API items"
      set_stats:
        data: 
          json_results: "{{ ocp_hosts.json }}"

    - name: Parse data dictionary when defined
      add_host:
        name: "{{ item }}"
        groups:
          - tag_banner
      with_items: "{{ ocp_hosts.json | json_query(oc_json_query) | list }}"
      when: item is defined


